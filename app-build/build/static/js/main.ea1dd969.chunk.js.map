{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/partials/Navbar.js","components/partials/Sidebar.js","components/pages/Dashboard.js","components/auth/Login.js","components/partials/SingleInputModal.js","components/partials/MultiLevelDropdown.js","components/partials/DeleteConfirmationModal.js","utils/helperFunctions.js","components/partials/Subtask.js","components/partials/Task.js","components/pages/Tasks.js","components/layout/NotFound.js","components/private-route/PrivateRoute.js","components/auth/Register.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/partials/UserAddModal.js","actions/userActions.js","components/partials/UserUpdateModal.js","components/pages/Users.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","Navbar","onLogoutClick","e","preventDefault","_this","props","user","this","auth","react_default","a","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","onClick","name","index_es","icon","faSignOutAlt","Component","connect","state","Sidebar","react_router_dom","to","isAdmin","concat","Dashboard","partials_Navbar","partials_Sidebar","faList","faUserAlt","Login","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","setState","defineProperty","target","value","onSubmit","userData","email","password","loginUser","errors","isAuthenticated","history","push","nextProps","noValidate","htmlFor","error","classnames","invalid","post","then","res","data","setItem","jwt_decode","catch","err","response","SingleInputModal","inputText","onClickFunction","submitFunction","closeButtonID","modalID","document","getElementById","click","tabIndex","role","aria-hidden","modalInputName","defaultValue","data-dismiss","bind","MultiLevelDropdown","capitalizeFirstLetter","string","charAt","toUpperCase","slice","toLowerCase","SubTask","editValues","_this2","console","log","getTaskData","changedNameValue","editSubTask","subTaskID","subtask","_id","changedTaskName","keyName","subTaskCrudApiCall","commentValue","newSubComment","subTaskComment","statusValue","editSubTaskStatus","subTaskStatus","_this3","newSubTask","_this4","_this5","subTaskId","class","partials_SingleInputModal","modalTitle","editTask","addEditComment","DeleteConfirmationModal","deleteTask","status","style","color","faPencilAlt","faTrash","Fragment","changeSubTaskStatus","Task","editTaskStatus","taskID","task","taskStatus","taskCrudApiCall","taskComment","subTaskName","_this6","addNewSubTask","editTaskName","addEditTaskComment","deleteComment","changeTaskStatus","dateString","date","Date","dd","String","getDate","padStart","getMonth","getFullYear","getReadableDate","faPlus","subtasks","length","width","map","Subtask","Tasks","records","assertThisInitialized","reqBody","empID","match","params","taskName","newTask","addNewTask","partials_Task","Landing","height","_ref","component","rest","objectWithoutProperties","react_router","assign","render","Register","newUser","password2","registerUser","paddingLeft","borderRadius","letterSpacing","marginTop","withRouter","isEmpty","require","initialState","loading","combineReducers","arguments","undefined","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","UserAddModal","onUserAdd","addUser","message","$","modal","toast","position","POSITION","TOP_CENTER","data-reset","autoComplete","form","React","UserUpdateModal","onUserUpdate","updateUser","record","success","data-reset-input","Users","columns","key","text","align","sortable","cell","react","marginRight","editRecord","deleteRecord","config","page_size","length_menu","filename","no_data_text","button","excel","print","csv","language","filter","info","pagination","first","previous","next","last","show_length_menu","show_filter","show_pagination","show_info","currentRecord","getData","pageData","partials_UserAddModal","partials_UserUpdateModal","react_datatable_lib_default","onPageChange","pageChange","react_toastify","jwtToken","currentTime","now","exp","window","location","App","es","exact","path","private_route_PrivateRoute","User","NotFound","__webpack_require__","r","__webpack_exports__","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","jquery__WEBPACK_IMPORTED_MODULE_4__","jquery__WEBPACK_IMPORTED_MODULE_4___default","jQuery","ReactDOM","toggleClass","on","val"],"mappings":"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","file":"static/js/main.ea1dd969.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"./types\";\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/register\", userData)\n        .then(res => history.push(\"/login\"))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post(\"/api/login\", userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem(\"jwtToken\", token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const USER_ADD = \"USER_ADD\";\nexport const USER_UPDATE = \"USER_UPDATE\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {connect} from \"react-redux\";\nimport {logoutUser} from \"../../actions/authActions\";\n\nclass Navbar extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        const { user } = this.props.auth;\n        return (\n            <div className=\"container-fluid p-0\">\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                    <a className=\"navbar-brand\" href=\"/\">Brand</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item dropdown\">\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"settings\"\n                                   data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    Settings\n                                </a>\n                                <div className=\"dropdown-menu\" aria-labelledby=\"settings\">\n                                    <a className=\"dropdown-item\" href=\"#\" onClick={this.onLogoutClick}>Logout</a>\n                                </div>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"#\" onClick={this.onLogoutClick}>Logout ({user.name}) <FontAwesomeIcon icon={faSignOutAlt} /> </a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Navbar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nclass Sidebar extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        const { user } = this.props.auth;\n        return (\n            <div className=\"border-right h-100\" id=\"sidebar-wrapper\">\n                <div className=\"list-group list-group-flush\">\n                    <Link to=\"/dashboard\" className=\"list-group-item list-group-item-action\">Dashboard</Link>\n\n                    {this.props.isAdmin\n                        ? <Link to=\"/users\" className=\"list-group-item list-group-item-action\">Users</Link>\n                        : <Link to={`/userTasks/${user.id}`} className=\"list-group-item list-group-item-action\">Tasks</Link>\n                    }\n                    <Link to=\"#\" className=\"list-group-item list-group-item-action\">Events</Link>\n                    <button className=\"list-group-item list-group-item-action\" onClick={this.onLogoutClick}>Logout <FontAwesomeIcon icon={faSignOutAlt} /></button>\n                </div>\n            </div>\n        );\n    }\n}\n\nSidebar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    isAdmin: state.auth.user.isAdmin\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Sidebar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbar from \"../partials/Navbar\";\nimport Sidebar from \"../partials/Sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\nimport { Link } from \"react-router-dom\";\nimport { faUserAlt } from \"@fortawesome/free-solid-svg-icons/faUserAlt\";\n\nclass Dashboard extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        //const { user } = this.props.auth;\n        return (\n            <div>\n                <Navbar />\n                <div className=\"d-flex\" id=\"wrapper\">\n                    <Sidebar />\n                    <div id=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                            <button className=\"btn btn-link mt-2\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList} /></button>\n                            <h1 className=\"mt-2 text-primary\">Dashboard</h1>\n                            <div className=\"row px-2\">\n                                {this.props.isAdmin && <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-primary text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Users</h5>\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\n                                                additional content.</p>\n                                            <Link to=\"/users\" className=\"btn btn-light\"><FontAwesomeIcon className=\"text-primary\" icon={faUserAlt} /> Go to Users</Link>\n                                        </div>\n                                    </div>\n                                </div>\n                                }\n                                <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-secondary text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Special title treatment</h5>\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\n                                                additional content.</p>\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-info text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Special title treatment</h5>\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\n                                                additional content.</p>\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-3 p-sm-2\">\n                                    <div className=\"card bg-dark text-white shadow-lg\">\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Special title treatment</h5>\n                                            <p className=\"card-text\">With supporting text below as a natural lead-in to\n                                                additional content.</p>\n                                            <a href=\"#\" className=\"btn btn-light\">Go somewhere</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    isAdmin: state.auth.user.isAdmin\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row mt-5\">\n                    <div className=\"col-md-4 mx-auto mt-5 card shadow-lg\">\n                        <div className=\"card-body p-1\">\n                            <h2 className=\"text-center text-primary mt-3\">Login</h2>\n                            <form noValidate onSubmit={this.onSubmit} className=\"white\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"form-control\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <span className=\"text-danger\">{errors.email}</span>\n                                <br/>\n                                <label htmlFor=\"password\">Password</label>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"form-control\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <span className=\"text-danger\">{errors.password}</span>\n                                <p className=\"text-center pb-0 mt-2\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"btn btn-large btn-primary mt-2 px-5\">\n                                        Login\n                                    </button>\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass SingleInputModal extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    state = {}\n\n    constructor() {\n        super();\n        this.state = {\n            inputText: \"\"\n        };\n    }\n\n\n    onChange = e => this.setState({ inputText: e.target.value })\n\n    onClickFunction = () => {\n        this.props.submitFunction(this.state.inputText)\n        this.setState({ inputText: \"\" })\n        const closeButtonID = `${this.props.modalID}-close-button`\n        document.getElementById(closeButtonID).click()\n    }\n\n\n\n    render() {\n        return (\n            <div\n                className=\"modal fade\"\n                id={this.props.modalID}\n                tabIndex={-1}\n                role=\"dialog\"\n                aria-labelledby=\"exampleModalLabel\"\n                aria-hidden=\"true\"\n            >\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        {/* <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                                {this.props.modalTitle}\n                            </h5>\n                            <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                            >\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div> */}\n                        <div className=\"modal-body\">\n                            <form>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"recipient-name\" className=\"col-form-label\">\n                                        {this.props.modalInputName}\n                                    </label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"message-text\"\n                                        defaultValue={this.props.defaultValue || \"\"}\n                                        onChange={this.onChange}\n                                        value={this.state.name}\n                                    />\n                                </div>\n                            </form>\n                            <div className=\"float-right\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-secondary mr-2\"\n                                    data-dismiss=\"modal\"\n                                    id={`${this.props.modalID}-close-button`}\n                                >\n                                    Close\n                                </button>\n                                <button onClick={this.onClickFunction.bind(this)} type=\"button\" className=\"btn btn-sm btn-primary\">\n                                    Submit\n                                </button>\n\n                            </div>\n                        </div>\n                        {/* <div className=\"modal-footer\">\n                        </div> */}\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n\n}\n\nSingleInputModal.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    modalTitle: PropTypes.string.isRequired,\n    modalInputName: PropTypes.string.isRequired,\n    modalID: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    isAdmin: state.auth.user.isAdmin\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(SingleInputModal);\n\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass MultiLevelDropdown extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"dropdown dropleft\">\n                        <button\n                            className=\"btn btn-sm btn-secondary dropdown-toggle\"\n                            type=\"button\"\n                            id=\"dropdownMenu1\"\n                            data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\"\n                            aria-expanded=\"false\"\n                        >\n                            Actions\n                        </button>\n                        <ul\n                            className=\"dropdown-menu multi-level\"\n                            role=\"menu\"\n                            aria-labelledby=\"dropdownMenu\"\n                        >\n\n                            <li className=\"dropdown-submenu\">\n                                <a className=\"dropdown-item\" tabIndex={-1} href=\"#\">\n                                    Comment Actions\n                                </a>\n                                <ul className=\"dropdown-menu\">\n                                    <li className=\"dropdown-item\">\n                                        <a tabIndex={-1} href=\"#\">\n                                            Edit\n                                        </a>\n                                    </li>\n                                    <li className=\"dropdown-item\">\n                                        <a href=\"#\">Delete</a>\n                                    </li>\n                                </ul>\n                            </li>\n                            <li className=\"dropdown-divider\" />\n                            <li className=\"dropdown-submenu\">\n                                <a className=\"dropdown-item\" tabIndex={-1} href=\"#\">\n                                    State Actions\n                                </a>\n                                <ul className=\"dropdown-menu\">\n                                    <li className=\"dropdown-item\">\n                                        <a tabIndex={-1} href=\"#\">\n                                            Unactioned\n                                        </a>\n                                    </li>\n                                    <li className=\"dropdown-item\">\n                                        <a tabIndex={-1} href=\"#\">\n                                            Inprogress\n                                        </a>\n                                    </li>\n                                    <li className=\"dropdown-item\">\n                                        <a tabIndex={-1} href=\"#\">\n                                            Closed\n                                        </a>\n                                    </li>\n\n                                </ul>\n                            </li>\n\n\n\n\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMultiLevelDropdown.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    isAdmin: state.auth.user.isAdmin\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(MultiLevelDropdown);\n\n\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass SingleInputModal extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    state = {}\n\n    constructor() {\n        super();\n        this.state = {\n            inputText: \"\"\n        };\n    }\n\n\n    onChange = e => this.setState({ inputText: e.target.value })\n\n    onClickFunction = () => {\n        this.props.submitFunction(this.state.inputText)\n        this.setState({ inputText: \"\" })\n        const closeButtonID = `${this.props.modalID}-close-button`\n        document.getElementById(closeButtonID).click()\n    }\n\n\n\n    render() {\n        return (\n            <div\n                className=\"modal fade\"\n                id={this.props.modalID}\n                tabIndex={-1}\n                role=\"dialog\"\n                aria-labelledby=\"exampleModalCenterTitle\"\n                aria-hidden=\"true\"\n            >\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">\n                                Are you sure you want to delete this record?\n                            </h5>\n                            <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                                id={`${this.props.modalID}-close-button`}\n\n                            >\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">Once it has been deleted, it cannot be recovered.</div>\n                        <div className=\"modal-footer\">\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-secondary\"\n                                data-dismiss=\"modal\"\n                            >\n                                Cancel\n                            </button>\n                            <button onClick={this.onClickFunction.bind(this)} type=\"button\" className=\"btn btn-sm btn-danger\">\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n\n}\n\nSingleInputModal.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    modalTitle: PropTypes.string.isRequired,\n    modalInputName: PropTypes.string.isRequired,\n    modalID: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    isAdmin: state.auth.user.isAdmin\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(SingleInputModal);\n\n\n","export const getReadableDate = (dateString) => {\n    var date = new Date(dateString);\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = date.getFullYear();\n\n    return mm + '/' + dd + '/' + yyyy;\n}\n\n\nexport const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport SingleInputModal from \"./SingleInputModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons/faTrash\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons/faPencilAlt\";\nimport MultiLevelDropdown from \"./MultiLevelDropdown\";\nimport DeleteConfirmationModal from \"./DeleteConfirmationModal\";\nimport { capitalizeFirstLetter } from \"../../utils/helperFunctions\";\n\nimport axios from \"axios\";\n\nclass SubTask extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    subTaskCrudApiCall(editValues) {\n        axios\n            .post(\"/tasks/subtask-edit\", editValues)\n            .then(res => {\n                console.log(\"RESSSSEDIT\", res)\n\n                this.props.getTaskData()\n            })\n            .catch(err => console.log(err))\n\n    }\n\n\n    editTask(changedNameValue) {\n\n        const editSubTask = {\n            subTaskID: this.props.subtask._id,\n            changedTaskName: changedNameValue,\n            keyName: \"changedTaskName\"\n\n        }\n\n        this.subTaskCrudApiCall(editSubTask)\n    }\n\n    addEditComment(commentValue) {\n        const newSubComment = {\n            subTaskID: this.props.subtask._id,\n            subTaskComment: commentValue,\n            keyName: \"subTaskComment\"\n        }\n\n        this.subTaskCrudApiCall(newSubComment)\n    }\n\n    changeSubTaskStatus(statusValue) {\n        const editSubTaskStatus = {\n            subTaskID: this.props.subtask._id,\n            subTaskStatus: statusValue,\n            keyName: \"subTaskStatus\"\n        }\n        this.subTaskCrudApiCall(editSubTaskStatus)\n    }\n\n    deleteTask() {\n\n        const newSubTask = {\n            subTaskID: this.props.subtask._id,\n        }\n\n        axios\n            .post(\"/tasks/subtask-delete\", newSubTask)\n            .then(res => {\n                this.props.getTaskData()\n            })\n            .catch(err => console.log(err))\n    }\n\n    deleteComment() {\n        const newSubTask = {\n            subTaskID: this.props.subtask._id,\n        }\n\n        axios\n            .post(\"/tasks/subtask-comment-delete\", newSubTask)\n            .then(res => {\n                this.props.getTaskData()\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n\n    render() {\n        const subTaskId = this.props.subtask._id\n\n        return (\n            <li class=\"list-group-item\">\n\n\n                <SingleInputModal\n                    modalTitle=\"Edit Sub Task\"\n                    modalInputName=\"Edit Sub Task:\"\n                    modalID={\"editSubTaskModal\" + subTaskId}\n                    defaultValue={this.props.subtask.name}\n                    submitFunction={this.editTask.bind(this)}\n                />\n\n                <SingleInputModal\n                    modalTitle=\"Add Sub Comment\"\n                    modalInputName=\"Add Sub Task Comment:\"\n                    modalID={\"addSubTaskCommentModal\" + subTaskId}\n                    submitFunction={this.addEditComment.bind(this)}\n                />\n\n                <SingleInputModal\n                    modalTitle=\"Edit Sub Task Comment\"\n                    modalInputName=\"Edit Sub Task Commetn:\"\n                    modalID={\"editSubTaskCommentModal\" + subTaskId}\n                    defaultValue={this.props.subtask.subTaskComment}\n                    submitFunction={this.addEditComment.bind(this)}\n                />\n\n\n\n                <DeleteConfirmationModal\n                    modalTitle=\"Delete Sub Task\"\n                    modalInputName=\"Delete Task:\"\n                    modalID={\"DeleteSubConfirmationModal\" + subTaskId}\n                    submitFunction={this.deleteTask.bind(this)}\n                />\n\n                <DeleteConfirmationModal\n                    modalTitle=\"Delete Sub Task Comment\"\n                    modalInputName=\"Delete Comment:\"\n                    modalID={\"DeleteSubCommentConfirmationModal\" + subTaskId}\n                    submitFunction={this.deleteTask.bind(this)}\n                />\n\n                <div className=\"row w-100\">\n                    <div className=\"col-8\">\n                        {this.props.subtask.name}\n                        <div className=\"text-muted\"> • {capitalizeFirstLetter(this.props.subtask.status)}</div>\n                        <div className=\"px-2\" style={{ color: \"#a2aab7\" }}>{this.props.subtask.subTaskComment}</div>\n                    </div>\n                    <div className=\"col-4 p-0\">\n                        <div class=\"float-right\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                            {this.props.isAdmin ?\n                                <span>\n                                    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                        <button\n                                            className=\"btn btn-sm btn-secondary\"\n                                            data-toggle=\"modal\"\n                                            data-target={`#editSubTaskModal${subTaskId}`}\n                                        > <FontAwesomeIcon icon={faPencilAlt} /> </button>\n                                        <button\n                                            className=\"btn btn-sm btn-danger\"\n                                            data-toggle=\"modal\"\n                                            data-target={`#DeleteSubConfirmationModal${subTaskId}`}\n                                        > <FontAwesomeIcon icon={faTrash} /> </button>\n                                    </div>\n\n                                </span>\n                                : <div class=\"btn-group\">\n\n                                    <button class=\"btn btn-secondary btn-sm dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Actions\n                                    </button>\n                                    <div class=\"dropdown-menu\">\n                                        {this.props.subtask.subTaskComment\n                                            ? <>\n                                                <button\n                                                    class=\"dropdown-item btn-sm \"\n                                                    type=\"button\"\n                                                    data-toggle=\"modal\"\n                                                    data-target={\"#editSubTaskCommentModal\" + subTaskId}\n                                                >Edit Comment</button>\n                                                <button\n                                                    class=\"dropdown-item btn-sm \"\n                                                    type=\"button\"\n                                                    data-toggle=\"modal\"\n                                                    data-target={\"#DeleteSubCommentConfirmationModal\" + subTaskId}\n                                                >Delete Comment</button>\n                                            </>\n                                            : <button\n                                                class=\"dropdown-item btn-sm\"\n                                                type=\"button\"\n                                                data-toggle=\"modal\"\n                                                data-target={\"#addSubTaskCommentModal\" + subTaskId}\n                                            >Add Comment</button>\n                                        }\n\n                                        <div class=\"dropdown-divider\"></div>\n                                        <button\n                                            class={`dropdown-item btn-sm ${this.props.subtask.status === \"UNACTIONED\" ? \"disabled\" : \"\"}`}\n                                            type=\"button\"\n                                            onClick={() => this.changeSubTaskStatus(\"UNACTIONED\")}\n                                        >Unactioned</button>\n                                        <button\n                                            class={`dropdown-item btn-sm ${this.props.subtask.status === \"INPROGRESS\" ? \"disabled\" : \"\"}`}\n                                            type=\"button\"\n                                            onClick={() => this.changeSubTaskStatus(\"INPROGRESS\")}\n                                        >Inprogress</button>\n                                        <button\n                                            class={`dropdown-item btn-sm ${this.props.subtask.status === \"CLOSED\" ? \"disabled\" : \"\"}`}\n                                            type=\"button\"\n                                            onClick={() => this.changeSubTaskStatus(\"CLOSED\")}\n                                        >Closed</button>\n\n                                    </div>\n                                </div>\n                            }\n\n\n                        </div>\n                    </div>\n                </div>\n            </li >\n\n        )\n    }\n\n}\n\nSubTask.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    isAdmin: state.auth.user.isAdmin\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(SubTask);\n\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Subtask from \"./Subtask\";\nimport SingleInputModal from \"./SingleInputModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons/faTrash\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons/faPencilAlt\";\nimport { getReadableDate, capitalizeFirstLetter } from \"../../utils/helperFunctions\";\nimport axios from \"axios\";\nimport DeleteConfirmationModal from \"./DeleteConfirmationModal\";\nclass Task extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    taskCrudApiCall(editValues) {\n        axios\n            .post(\"/tasks/task-edit\", editValues)\n            .then(res => {\n                console.log(\"RESSSSEDIT\", res)\n\n                this.props.getTaskData()\n            })\n            .catch(err => console.log(err))\n\n    }\n\n    changeTaskStatus(statusValue) {\n        const editTaskStatus = {\n            taskID: this.props.task._id,\n            taskStatus: statusValue,\n            keyName: \"taskStatus\"\n        }\n        this.taskCrudApiCall(editTaskStatus)\n    }\n\n\n    editTaskName(changedNameValue) {\n\n        const newSubTask = {\n            taskID: this.props.task._id,\n            changedTaskName: changedNameValue,\n            keyName: \"changedTaskName\"\n        }\n\n        this.taskCrudApiCall(newSubTask)\n    }\n\n    addEditTaskComment(commentValue) {\n\n        const newSubTask = {\n            taskID: this.props.task._id,\n            taskComment: commentValue,\n            keyName: \"taskComment\"\n        }\n\n        this.taskCrudApiCall(newSubTask)\n    }\n\n\n    deleteTask() {\n\n        const newSubTask = {\n            taskID: this.props.task._id,\n        }\n\n        axios\n            .post(\"/tasks/task-delete\", newSubTask)\n            .then(res => {\n                this.props.getTaskData()\n            })\n            .catch(err => console.log(err))\n    }\n\n    deleteComment() {\n\n        const newSubTask = {\n            taskID: this.props.task._id,\n        }\n\n        axios\n            .post(\"/tasks/task-comment-delete\", newSubTask)\n            .then(res => {\n                this.props.getTaskData()\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    addNewSubTask(subTaskName) {\n\n        const newSubTask = {\n            taskID: this.props.task._id,\n            subTaskName\n        }\n\n        axios\n            .post(\"/tasks/subtask-add\", newSubTask)\n            .then(res => {\n                this.props.getTaskData()\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n\n\n\n\n    render() {\n        //const { user } = this.props.auth;\n        const taskID = this.props.task._id\n        return (\n            <div>\n\n                <SingleInputModal\n                    modalTitle=\"Add Sub Task\"\n                    modalInputName=\"Add Subtask:\"\n                    modalID={\"subTaskModal\" + taskID}\n                    submitFunction={this.addNewSubTask.bind(this)}\n                />\n\n\n                <SingleInputModal\n                    modalTitle=\"Edit Task\"\n                    modalInputName=\"Edit Task:\"\n                    modalID={\"editTaskModal\" + taskID}\n                    defaultValue={this.props.task.name}\n                    submitFunction={this.editTaskName.bind(this)}\n                />\n\n                <SingleInputModal\n                    modalTitle=\"Add Comment\"\n                    modalInputName=\"Add Comment:\"\n                    modalID={\"addCommentModal\" + taskID}\n                    submitFunction={this.addEditTaskComment.bind(this)}\n                />\n\n                <SingleInputModal\n                    modalTitle=\"Edit Comment\"\n                    modalInputName=\"Edit Comment:\"\n                    modalID={\"editTaskCommentModal\" + taskID}\n                    defaultValue={this.props.task.taskComment}\n                    submitFunction={this.addEditTaskComment.bind(this)}\n                />\n\n\n                <DeleteConfirmationModal\n                    modalTitle=\"Delete Task\"\n                    modalInputName=\"Delete Task:\"\n                    modalID={\"DeleteConfirmationModal\" + taskID}\n                    submitFunction={this.deleteTask.bind(this)}\n                />\n\n                <DeleteConfirmationModal\n                    modalTitle=\"Delete Comment\"\n                    modalInputName=\"Delete Comment:\"\n                    modalID={\"DeleteCommentConfirmationModal\" + taskID}\n                    submitFunction={this.deleteComment.bind(this)}\n                />\n\n\n                <div className=\"card rounded-3\">\n                    <div className=\"card-body p-4\">\n                        <p className=\"mb-2\">\n                            <span className=\"h2 me-2\">{this.props.task.name}</span>{\" \"}\n                            {this.props.isAdmin\n                                ? <span className=\"float-right mt-2\">\n                                    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                        <button className=\"btn btn-sm btn-secondary\" data-toggle=\"modal\" data-target={`#editTaskModal${taskID}`}><FontAwesomeIcon icon={faPencilAlt} /></button>\n                                        <button className=\"btn btn-sm btn-danger\" data-toggle=\"modal\" data-target={`#DeleteConfirmationModal${taskID}`}><FontAwesomeIcon icon={faTrash} /></button>\n                                    </div>\n\n                                </span>\n                                : <span class=\"dropdown float-right mt-2\">\n                                    <button class=\"btn btn-sm btn-info dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        {capitalizeFirstLetter(this.props.task.status)}\n                                    </button>\n                                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n                                        {!(this.props.task.status === \"UNACTIONED\") && <button class=\"dropdown-item\" type=\"button\" onClick={() => this.changeTaskStatus(\"UNACTIONED\")}>Unactioned</button>}\n                                        {!(this.props.task.status === \"INPROGRESS\") && <button class=\"dropdown-item\" type=\"button\" onClick={() => this.changeTaskStatus(\"INPROGRESS\")}>Inprogress</button>}\n                                        {!(this.props.task.status === \"CLOSED\") && <button class=\"dropdown-item\" onClick={() => this.changeTaskStatus(\"CLOSED\")} type=\"button\">Closed</button>}\n\n\n                                    </div>\n                                </span>\n                            }\n                        </p>\n                        <p className=\"text-muted\">{getReadableDate(this.props.task.date)} • {capitalizeFirstLetter(this.props.task.status)}\n                            {this.props.isAdmin && <button className=\"btn btn-sm btn-dark float-right\" data-toggle=\"modal\" data-target={`#subTaskModal${taskID}`}><FontAwesomeIcon icon={faPlus} /> Subtask</button>}\n                        </p>\n                        {/* <ul className=\"list-group rounded-0\"> */}\n\n                        {this.props.task && this.props.task.subtasks.length > 0 &&\n                            <div class=\"card mt-4\" style={{ \"width\": \"100%\" }}>\n                                <ul class=\"list-group list-group-flush\">\n                                    {this.props.task.subtasks.map(subtask => (\n                                        <Subtask subtask={subtask} getTaskData={this.props.getTaskData} />\n                                    ))}\n                                </ul>\n                            </div>\n\n                        }\n\n                        {/* </ul> */}\n                        {this.props.task.taskComment\n                            ? <div className=\"divider d-flex align-items-center mt-4 mb-2\">\n                                <p className=\"m-0 w-100\" style={{ color: \"#a2aab7\" }}>\n                                    {this.props.task.taskComment}\n                                    {!this.props.isAdmin && <span className=\"float-right\">\n                                        <div class=\"btn-group\" role=\"group\">\n                                            <button className=\"btn btn-sm btn-secondary\" data-toggle=\"modal\" data-target={\"#editTaskCommentModal\" + taskID}><FontAwesomeIcon icon={faPencilAlt} /></button>\n                                            <button className=\"btn btn-sm btn-danger\" data-toggle=\"modal\" data-target={\"#DeleteCommentConfirmationModal\" + taskID}><FontAwesomeIcon icon={faTrash} /></button>\n                                        </div>\n\n                                    </span>\n                                    }\n\n                                </p>\n                            </div>\n                            : <span>\n                                {!this.props.isAdmin &&\n                                    <div className=\"float-right mt-3\">\n                                        <button className=\"btn btn-sm btn-dark\" data-toggle=\"modal\" data-target={\"#addCommentModal\" + taskID}><FontAwesomeIcon icon={faPlus} /> Comment</button>\n                                    </div>}\n                            </span>\n\n                        }\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nTask.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    getTaskData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    isAdmin: state.auth.user.isAdmin\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Task);\n\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbar from \"../partials/Navbar\";\nimport Sidebar from \"../partials/Sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\nimport { Link } from \"react-router-dom\";\nimport { faUserAlt } from \"@fortawesome/free-solid-svg-icons/faUserAlt\";\nimport Task from \"../partials/Task\";\nimport { useLocation } from 'react-router-dom'\nimport axios from \"axios\";\nimport SingleInputModal from \"../partials/SingleInputModal\";\n\nclass Tasks extends Component {\n\n\n    constructor() {\n        super()\n        this.state = {\n            records: []\n        };\n        this.getTaskData = this.getTaskData.bind(this);\n\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    componentDidMount() {\n        this.getTaskData()\n    };\n\n    componentWillReceiveProps(nextProps) {\n        this.getTaskData()\n    }\n\n\n\n    getTaskData() {\n        const reqBody = {\n            empID: this.props.match.params.id\n        }\n\n        axios\n            .post(\"/tasks/task-get\", reqBody)\n            .then(res => {\n                this.setState({ records: res.data })\n            })\n            .catch(err => console.log(\"task err\", err))\n    }\n\n    addNewTask(taskName) {\n\n        const newTask = {\n            empID: this.props.match.params.id,\n            taskName\n        }\n\n        axios\n            .post(\"/tasks/task-add\", newTask)\n            .then(res => {\n                this.getTaskData()\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n\n\n    render() {\n        console.log(\"STATE\", this.props)\n        // const location = useLocation()\n        // const { taskID } = location.state\n        // console.log(\"TASK IDD\", taskID)\n\n        //const { user } = this.props.auth;\n        return (\n            <div>\n                <Navbar />\n                <div className=\"d-flex\" id=\"wrapper\">\n                    <Sidebar />\n                    <div id=\"page-content-wrapper\">\n                        <SingleInputModal\n                            modalTitle=\"Add Task\"\n                            modalInputName=\"Task:\"\n                            modalID=\"taskModal\"\n                            submitFunction={this.addNewTask.bind(this)}\n\n                        />\n\n                        {this.props.isAdmin &&\n                            <div className=\"container mt-4\">\n                                <button className=\"btn btn-sm btn-secondary float-right mr-4\" data-toggle=\"modal\" data-target=\"#taskModal\">Add Task</button>\n                            </div>\n                        }\n\n                        <section className=\"\">\n                            <div className=\"container py-4 h-100\">\n                                <div className=\"row d-flex h-100\">\n                                    {this.state.records.map(task => {\n                                        return (\n                                            <div className=\"col col-lg-8 col-xl-6 mt-4\">\n                                                <Task task={task} getTaskData={this.getTaskData} />\n                                            </div>\n\n                                        )\n                                    })}\n\n                                </div>\n                            </div>\n                        </section>\n\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nTasks.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    isAdmin: state.auth.user.isAdmin\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Tasks);\n\n\n","import React, { Component } from \"react\";\nclass Landing extends Component {\n    render() {\n        return (\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <h1>\n                           Not Found\n                        </h1>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Landing;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            auth.isAuthenticated === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from \"react\";\nimport { Link, withRouter  } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n        this.props.registerUser(newUser, this.props.history);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\n                            <i className=\"material-icons left\">keyboard_backspace</i> Back to\n                            home\n                        </Link>\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                            <h4>\n                                <b>Register</b> below\n                            </h4>\n                            <p className=\"grey-text text-darken-1\">\n                                Already have an account? <Link to=\"/login\">Log in</Link>\n                            </p>\n                        </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.name}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    error={errors.name}\n                                    className={classnames(\"\", {\n                                        invalid: errors.name\n                                    })}\n                                />\n                                <label htmlFor=\"name\">Name</label>\n                                <span className=\"red-text\">{errors.name}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <label htmlFor=\"email\">Email</label>\n                                <span className=\"red-text\">{errors.email}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <label htmlFor=\"password\">Password</label>\n                                <span className=\"red-text\">{errors.password}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password2}\n                                    id=\"password2\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password2\n                                    })}\n                                />\n                                <label htmlFor=\"password2\">Confirm Password</label>\n                                <span className=\"red-text\">{errors.password2}</span>\n                            </div>\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                <button\n                                    style={{\n                                        width: \"150px\",\n                                        borderRadius: \"3px\",\n                                        letterSpacing: \"1.5px\",\n                                        marginTop: \"1rem\"\n                                    }}\n                                    type=\"submit\"\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\">\n                                    Sign up\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));","import {\n    SET_CURRENT_USER,\n    USER_ADD,\n    USER_LOADING,\n    USER_UPDATE\n} from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false,\n};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case USER_ADD:\n            return {\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_UPDATE:\n            return {\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload,\n            };\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}\n","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\nexport default store;\n","import React from 'react'\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addUser } from \"../../actions/userActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from 'jquery';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass UserAddModal extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            errors: {},\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n        if (nextProps.auth !== undefined\n            && nextProps.auth.user !== undefined\n            && nextProps.auth.user.data !== undefined\n            && nextProps.auth.user.data.message !== undefined) {\n            $('#add-user-modal').modal('hide');\n            toast(nextProps.auth.user.data.message, {\n                position: toast.POSITION.TOP_CENTER\n            });\n        }\n    }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    onUserAdd = e => {\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n        this.props.addUser(newUser, this.props.history);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"modal fade\" id=\"add-user-modal\" data-reset=\"true\">\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h4 className=\"modal-title\">Add User</h4>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form noValidate onSubmit={this.onUserAdd} id=\"add-user\">\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"name\">Name</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.name}\n                                                id=\"name\"\n                                                type=\"text\"\n                                                error={errors.name}\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.name\n                                                })}/>\n                                            <span className=\"text-danger\">{errors.name}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"email\">Email</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.email}\n                                                error={errors.email}\n                                                id=\"email\"\n                                                type=\"email\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.email\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.email}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"password\">Password</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                autoComplete={''}\n                                                onChange={this.onChange}\n                                                value={this.state.password}\n                                                error={errors.password}\n                                                id=\"password\"\n                                                type=\"password\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.password\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.password}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"password2\">Confirm Password</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                autoComplete={''}\n                                                onChange={this.onChange}\n                                                value={this.state.password2}\n                                                id=\"password2\"\n                                                type=\"password\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.password2\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.password2}</span>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button\n                                    form=\"add-user\"\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\">\n                                    Add User\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUserAddModal.propTypes = {\n    addUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { addUser }\n)(withRouter(UserAddModal));\n","import axios from \"axios\";\nimport {\n    GET_ERRORS,\n    USER_ADD,\n    USER_UPDATE\n} from \"./types\";\n\nexport const addUser = (userData, history) => dispatch => {\n    axios\n        .post(\"/api/user-add\", userData)\n        .then(res =>\n            dispatch({\n                type: USER_ADD,\n                payload: res,\n            })\n        ).catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n};\n\n\nexport const updateUser = (userData) => dispatch => {\n    axios\n        .post(\"/api/user-update\", userData)\n        .then(res =>\n            dispatch({\n                type: USER_UPDATE,\n                payload: res,\n            })\n        ).catch(err =>\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    );\n};\n","import React from 'react'\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../../actions/userActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport $ from 'jquery';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass UserUpdateModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.record.id,\n            name: this.props.record.name,\n            email: this.props.record.email,\n            password: '',\n            errors: {},\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.record) {\n            this.setState({\n                id: nextProps.record.id,\n                name: nextProps.record.name,\n                email: nextProps.record.email,\n            })\n        }\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n        if (nextProps.auth !== undefined\n            && nextProps.auth.user !== undefined\n            && nextProps.auth.user.data !== undefined\n            && nextProps.auth.user.data.message !== undefined\n            && nextProps.auth.user.data.success) {\n            $('#update-user-modal').modal('hide');\n            toast(nextProps.auth.user.data.message, {\n                position: toast.POSITION.TOP_CENTER\n            });\n        }\n    }\n\n    onChange = e => {\n        if (e.target.id === 'user-update-name') {\n            this.setState({ name: e.target.value });\n        }\n        if (e.target.id === 'user-update-email') {\n            this.setState({ email: e.target.value });\n        }\n        if (e.target.id === 'user-update-password') {\n            this.setState({ password: e.target.value });\n        }\n    };\n\n    onUserUpdate = e => {\n        e.preventDefault();\n        const newUser = {\n            _id: this.state.id,\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.updateUser(newUser);\n    };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div>\n                <div className=\"modal fade\" id=\"update-user-modal\">\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h4 className=\"modal-title\">Update User</h4>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form noValidate onSubmit={this.onUserUpdate} id=\"update-user\">\n                                    <input\n                                        onChange={this.onChange}\n                                        value={this.state.id}\n                                        id=\"user-update-id\"\n                                        type=\"text\"\n                                        className=\"d-none\"/>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"name\">Name</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.name}\n                                                id=\"user-update-name\"\n                                                type=\"text\"\n                                                error={errors.name}\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.name\n                                                })}/>\n                                            <span className=\"text-danger\">{errors.name}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"email\">Email</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                onChange={this.onChange}\n                                                value={this.state.email}\n                                                error={errors.email}\n                                                id=\"user-update-email\"\n                                                type=\"email\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.email\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.email}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-2\">\n                                        <div className=\"col-md-3\">\n                                            <label htmlFor=\"password\">Password</label>\n                                        </div>\n                                        <div className=\"col-md-9\">\n                                            <input\n                                                data-reset-input={true}\n                                                autoComplete={''}\n                                                onChange={this.onChange}\n                                                error={errors.password}\n                                                id=\"user-update-password\"\n                                                type=\"password\"\n                                                className={classnames(\"form-control\", {\n                                                    invalid: errors.password\n                                                })}\n                                            />\n                                            <span className=\"text-danger\">{errors.password}</span>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button\n                                    form=\"update-user\"\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\">\n                                    Update User\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nUserUpdateModal.propTypes = {\n    updateUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { updateUser }\n)(withRouter(UserUpdateModal));\n","import React, { Component, Fragment } from \"react\";\nimport Navbar from \"../partials/Navbar\";\nimport Sidebar from \"../partials/Sidebar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons/faTrash\";\n\nimport ReactDatatable from '@ashvin27/react-datatable';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport UserAddModal from \"../partials/UserAddModal\";\nimport UserUpdateModal from \"../partials/UserUpdateModal\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\nclass Users extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.columns = [\n            {\n                key: \"_id\",\n                text: \"Id\",\n                className: \"id\",\n                align: \"left\",\n                sortable: true,\n            },\n            {\n                key: \"name\",\n                text: \"Name\",\n                className: \"name\",\n                align: \"left\",\n                sortable: true,\n            },\n            {\n                key: \"email\",\n                text: \"Email\",\n                className: \"email\",\n                align: \"left\",\n                sortable: true\n            },\n            {\n                key: \"date\",\n                text: \"Date\",\n                className: \"date\",\n                align: \"left\",\n                sortable: true\n            },\n            {\n                key: \"action\",\n                text: \"Action\",\n                className: \"action\",\n                // width: 100,\n                align: \"left\",\n                sortable: false,\n                cell: record => {\n                    return (\n                        <Fragment>\n                            <Link to={`/userTasks/${record._id}`} state={{ taskID: record._id }} className=\"text-white\">\n                                <button\n                                    className=\"btn btn-info btn-sm\"\n                                    // <Link to=\"/events\" className=\"list-group-item list-group-item-action\">Events</Link>\n                                    // onClick={() => this.deleteRecord(record)}\n                                    style={{ marginRight: '5px' }}\n                                >\n                                    <i className=\"fa fa-external-link\"></i>\n                                </button></Link>\n\n                            <button\n                                data-toggle=\"modal\"\n                                data-target=\"#update-user-modal\"\n                                className=\"btn btn-primary btn-sm\"\n                                onClick={() => this.editRecord(record)}\n                                style={{ marginRight: '5px' }}>\n                                <i className=\"fa fa-edit\"></i>\n                            </button>\n                            <button\n                                className=\"btn btn-danger btn-sm\"\n                                onClick={() => this.deleteRecord(record)}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </button>\n\n                        </Fragment>\n                    );\n                }\n            }\n        ];\n\n        this.config = {\n            page_size: 10,\n            length_menu: [10, 20, 50],\n            filename: \"Users\",\n            no_data_text: 'No user found!',\n            button: {\n                excel: true,\n                print: true,\n                csv: true\n            },\n            language: {\n                length_menu: \"Show _MENU_ result per page\",\n                filter: \"Filter in records...\",\n                info: \"Showing _START_ to _END_ of _TOTAL_ records\",\n                pagination: {\n                    first: \"First\",\n                    previous: \"Previous\",\n                    next: \"Next\",\n                    last: \"Last\"\n                }\n            },\n            show_length_menu: true,\n            show_filter: true,\n            show_pagination: true,\n            show_info: true,\n        };\n\n        this.state = {\n            records: []\n        };\n\n        this.state = {\n            currentRecord: {\n                id: '',\n                name: '',\n                email: '',\n                password: '',\n                password2: '',\n            }\n        };\n\n        this.getData = this.getData.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData()\n    };\n\n    componentWillReceiveProps(nextProps) {\n        this.getData()\n    }\n\n    getData() {\n        axios\n            .post(\"/api/user-data\")\n            .then(res => {\n                this.setState({ records: res.data })\n            })\n            .catch()\n    }\n\n    editRecord(record) {\n        this.setState({ currentRecord: record });\n    }\n\n    deleteRecord(record) {\n        axios\n            .post(\"/api/user-delete\", { _id: record._id })\n            .then(res => {\n                if (res.status === 200) {\n                    toast(res.data.message, {\n                        position: toast.POSITION.TOP_CENTER,\n                    })\n                }\n            })\n            .catch();\n        this.getData();\n    }\n\n    pageChange(pageData) {\n        console.log(\"OnPageChange\", pageData);\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"d-flex\" id=\"wrapper\">\n                    <Sidebar />\n                    <UserAddModal />\n                    <UserUpdateModal record={this.state.currentRecord} />\n                    <div id=\"page-content-wrapper\">\n                        <div className=\"container-fluid\">\n                            <button className=\"btn btn-link mt-3\" id=\"menu-toggle\"><FontAwesomeIcon icon={faList} /></button>\n                            <button className=\"btn btn-outline-primary float-right mt-3 mr-2\" data-toggle=\"modal\" data-target=\"#add-user-modal\"><FontAwesomeIcon icon={faPlus} /> Add User</button>\n                            <h1 className=\"mt-2 text-primary\">Users List</h1>\n                            <ReactDatatable\n                                config={this.config}\n                                records={this.state.records}\n                                columns={this.columns}\n                                onPageChange={this.pageChange.bind(this)}\n                            />\n                        </div>\n                    </div>\n                    <ToastContainer />\n                </div>\n            </div>\n        );\n    }\n\n}\n\nUsers.propTypes = {\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    records: state.records\n});\n\nexport default connect(\n    mapStateToProps\n)(Users);\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport React, { Component } from 'react';\nimport Login from \"./components/auth/Login\";\nimport Tasks from \"./components/pages/Tasks\";\nimport NotFound from \"./components/layout/NotFound\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Register from \"./components/auth/Register\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap';\nimport '../node_modules/font-awesome/css/font-awesome.css';\nimport '../node_modules/jquery/dist/jquery.min';\nimport '../node_modules/popper.js/dist/popper';\n\nimport User from \"./components/pages/Users\";\n\nif (localStorage.jwtToken) {\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    store.dispatch(setCurrentUser(decoded));\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        store.dispatch(logoutUser());\n        window.location.href = \"./login\";\n    }\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"App\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Login} />\n                            <Route exact path=\"/register\" component={Register} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Switch>\n                                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                                <PrivateRoute exact path=\"/users\" component={User} />\n                                <PrivateRoute path=\"/userTasks/:id\" component={Tasks} />\n\n                            </Switch>\n                            <Route exact path=\"*\" component={NotFound} />\n                        </Switch>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport $ from \"jquery\";\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n$(\"#menu-toggle\").click(function() {\n    $(\"#wrapper\").toggleClass(\"toggled\");\n});\n\n$('.modal[data-reset=\"true\"]').on('shown.bs.modal', () =>\n    $(\"input[name != 'timestamp']\").val(''));\n\n$('.modal').on('shown.bs.modal', () =>\n    $('input[data-reset-input=\"true\"]').val(''));\n"],"sourceRoot":""}