name: MERN Admin ERP testing 
on: [push]

jobs:
  build:

    runs-on: self-hosted

    # self declared env variables for passing to build scripts
    env:
      SECRET_PATH: reactAdminTest/data/aws
      VAULT_URL: http://54.165.243.121:8200
      VAULT_TOKEN: hvs.DnsnMiUnyDa1xDrzGo1DOxzL

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    # Masking Secrets
    - name: Mask
      run: | 
        echo "::add-mask::$VAULT_URL"
        echo "::add-mask::$VAULT_TOKEN"
        echo "::add-mask::$SECRET_PATH"

    - name: Import Secrets
      uses: hashicorp/vault-action@v2.4.0
      with:
        url: ${{ env.VAULT_URL }}
        tlsSkipVerify: true
        token: ${{ env.VAULT_TOKEN }}
        secrets: |
          ${{ env.SECRET_PATH }} SERVER_PATH ;
          ${{ env.PEM_KEY }} PEM_KEY ;
            
    # Testing Secrets
    - name: Testing Secrets
      run: echo ${{ env.SERVER_PATH }}

    # Installing Dependencies
    - name: Installing Dependencies
      run: npm i

    - name: Removing Docker Container if present
      run: |
        sudo docker stop admin-erp || true
        sudo docker rm admin-erp || true

    # - name: Transferring files
    #   run: | 
        # rm -rf ${{ env.SERVER_PATH }}
        # mkdir ${{ env.SERVER_PATH }}
        # cp -r . ${{ env.SERVER_PATH }} 

    - name: Generating Build
      run: | 
        sudo docker build -t admin-erp/react:latest .
        sudo docker run -p 3000:3000 --name=admin-erp admin-erp/react

    - name: Getting Build
      run : docker cp admin-erp:/app/client/build .
  
    # - name: multiple command
    #   uses: appleboy/ssh-action@master
    #   env:
    #     SERVER_PATH: ${{ env.SERVER_PATH }}
    #   with:
    #     host: ec2-44-204-151-220.compute-1.amazonaws.com
    #     username: ubuntu
    #     key: ${{ env.PEM_KEY }}
    #     port: 22
    #     envs: SERVER_PATH
    #     script: |
    #       echo ${{ env.SERVER_PATH }}
    #       rm -rf ${{ env.SERVER_PATH }}
    #       mkdir ${{ env.SERVER_PATH }}
    #       cp -r . ${{ env.SERVER_PATH }} 

    - name: ssh deploy
      uses: easingthemes/ssh-deploy@v2.2.11
      env:
        SSH_PRIVATE_KEY: ${{ env.PEM_KEY }}
        ARGS: "-rltgoDzvO --delete"
        SOURCE: "build/"
        REMOTE_HOST: ec2-44-204-151-220.compute-1.amazonaws.com
        REMOTE_USER: ubuntu
        TARGET: /home/ubuntu
        # EXCLUDE: "/dist/, /node_modules/"
